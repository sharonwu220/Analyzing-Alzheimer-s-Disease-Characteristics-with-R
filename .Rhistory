Alz_data<-read.csv("C:\Users\User\Documents\Essex\curriculum\SpringMA335Modelling experimental\final_project\project data.csv")
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
# 加载所需的库
library(ggplot2)
library(dplyr)
library(tidyr)
library(caret)
library(cluster)
library(FSelector)
library(glmnet)
# 读取数据集
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
View(Alz_data)
#loading data
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
#convert M/F into numeric values
data$M.F <- ifelse(data$M.F == "M", 1, 0)
#convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
#remove rows with Group = “Converted” and missing values
Alz2data <- data %>%
filter(!is.na(Group) & Group != "Converted")
#remove rows with Group = “Converted” and missing values
Alz_data <- Alz_data %>%
filter(!is.na(Group) & Group != "Converted")
#loading data
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
#convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
#loading data
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
View(Alz_data)
#convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
#remove rows with Group = “Converted” and missing values
Alz_data <- Alz_data %>%
filter(!is.na(Group) & Group != "Converted")
summary(Alz_data)
# boxplots
ggplot(Alz_data, aes(x = Group, y = Age)) +
geom_boxplot()
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_histogram()
# scatterplots
ggplot(Alz_data, aes(x = MR.Delay, y = ASF, color = Group)) +
geom_point()
# histograms
ggplot(dataset, aes(x = Group, fill = Group)) +
geom_bar()  # 使用geom_bar()绘制计数直方图
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar()  # 使用geom_bar()绘制计数直方图
# scatterplots
ggplot(Alz_data, aes(x = MR.Delay, y = ASF, color = Group)) +
geom_point()
# loading data
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
# convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
# remove rows with Group = “Converted” and missing values
Alz_data <- Alz_data %>%
filter(!is.na(Group) & Group != "Converted")
##### task1
summary(Alz_data)
# boxplots
ggplot(Alz_data, aes(x = Group, y = Age)) +
geom_boxplot()
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar()  # 使用geom_bar()绘制计数直方图
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group, y = SES)) +
geom_bar()  # 使用geom_bar()绘制计数直方图
# scatterplots
ggplot(Alz_data, aes(x = MR.Delay, y = ASF, color = Group)) +
geom_point()
View(Alz_data)
# histograms
ggplot(dataset, aes(x = Group, y = SES, fill = Group)) +
geom_histogram()  # 使用geom_bar()绘制计数直方图
# histograms
ggplot(Alz_data, aes(x = Group, y = SES, fill = Group)) +
geom_histogram()  # 使用geom_bar()绘制计数直方图
# histograms
ggplot(Alz_data, aes(x = Group, y = SES)) +
geom_histogram()  # 使用geom_bar()绘制计数直方图
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar()   # 使用geom_bar()绘制计数直方图
# scatterplots
ggplot(Alz_data, aes(x = MR.Delay, y = ASF, color = Group)) +
geom_point()
# scatterplots
ggplot(Alz_data, aes(x = Age, y = MMSE, color = Group)) +
geom_point()
# scatterplots
ggplot(Alz_data, aes(x = MMSE, y = Age, color = Group)) +
geom_point()
# scatterplots
ggplot(Alz_data, aes(x = CDR, y = Age, color = Group)) +
geom_point()
# scatterplots
ggplot(Alz_data, aes(x = nWBV, y = Age, color = Group)) +
geom_point()
# scatterplots
ggplot(Alz_data, aes(x = Age, y = nWBV, color = Group)) +
geom_point()
# scatterplots
ggplot(Alz_data, aes(x = nWBV, y = Age, color = Group)) +
geom_point()
##### task1
summary(Alz_data)
# boxplots
ggplot(Alz_data, aes(x = Group, y = Age)) +
geom_boxplot()
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar()   # 使用geom_bar()绘制计数直方图
# histograms
ggplot(Alz_data, aes(x = Group, y = M/F, fill = Group)) +
geom_bar()   # 使用geom_bar()绘制计数直方图
# histograms
ggplot(Alz_data, aes(x = Group, y = M.F, fill = Group)) +
geom_bar()   # 使用geom_bar()绘制计数直方图
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar(position = "fill")# 使用geom_bar()绘制计数直方图
ggplot(Alz_data, aes(x = Group, y = M.F, fill = Group)) +
geom_bar(position = "fill")# 使用geom_bar()绘制计数直方图
# histograms
ggplot(Alz_data, aes(x = Group, fill = M.F)) +
geom_bar(position = "fill")# 使用geom_bar()绘制计数直方图
# loading data
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
# convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
# remove rows with Group = “Converted” and missing values
Alz_data <- Alz_data %>%
filter(!is.na(Group) & Group != "Converted")
##### task1
summary(Alz_data)
# boxplots
ggplot(Alz_data, aes(x = Group, y = Age)) +
geom_boxplot()
ggplot(Alz_data, aes(x = Group, y = M.F, fill = Group)) +
geom_bar(position = "fill")# 使用geom_bar()绘制计数直方图
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar(aes(y = ..count.. / sum(..count..)))# 使用geom_bar()绘制计数直方图
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar(position = "fill")# 使用geom_bar()绘制计数直方图
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar()   # 使用geom_bar()绘制计数直方图
# scatterplots
ggplot(Alz_data, aes(x = nWBV, y = Age, color = Group)) +
geom_point()
##### task2
# 选择用于聚类的变量
cluster_data <- Alz_data %>% select(-c(ID, Group))
library(factoextra)
# Libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(caret)
library(cluster)
library(FSelector)
library(factoextra)
library(glmnet)
##### task2
distance.Euclidean <- get_dist(Alz_data)
# Libraries
install.packages("factoextra")
library(factoextra)
# Libraries
install.packages("factoextra")
install.packages("factoextra")
library(factoextra)
library(ggplot2)
library(ggplot2)
library(dplyr)
library(tidyr)
library(caret)
library(FSelector)
library(factoextra)
library(glmnet)
# loading data
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
# convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
# remove rows with Group = “Converted” and missing values
Alz_data <- Alz_data %>%
filter(!is.na(Group) & Group != "Converted")
##### task1
summary(Alz_data)
# boxplots
ggplot(Alz_data, aes(x = Group, y = Age)) +
geom_boxplot()
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar()   # 使用geom_bar()绘制计数直方图
# scatterplots
ggplot(Alz_data, aes(x = nWBV, y = Age, color = Group)) +
geom_point()
##### task2
distance.Euclidean <- get_dist(Alz_data)
fviz_dist(distance.Euclidean, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
distance.corr <- get_dist(Alz_data, stand = TRUE, method = "pearson")
fviz_dist(distance.corr, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
data1 <- scale(Alz_data)
str(Alz_data)
Alz_data$Age <- as.numeric(Alz_data$Age)
Alz_data$EDUC <- as.numeric(Alz_data$EDUC)
Alz_data$SES <- as.numeric(Alz_data$SES)
Alz_data$MMSE <- as.numeric(Alz_data$MMSE)
Alz_data$eTIV <- as.numeric(Alz_data$eTIV)
str(Alz_data)
data1 <- scale(Alz_data)
View(Alz_data)
Alz_data$Group <- as.numeric(Alz_data$Group)
str(Alz_data)
data1 <- scale(Alz_data)
View(data1)
set.seed(123)
kmeans2 <- kmeans(data1, centers = 2, nstart = 20)
kmeans3 <- kmeans(data1, centers = 3, nstart = 20)
str(kmeans2)
any(is.na(data1))
any(is.nan(data1))
any(is.infinite(data1))
data1 <- na.omit(data1)
# loading data
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
View(Alz_data)
# convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
# remove rows with Group = “Converted” and missing values
Alz_data <- Alz_data %>%
filter(!is.na(Group) & Group != "Converted")
Alz_data$Group <- ifelse(Alz_data$Group == "Nondemented", 1, 0)
##### task1
summary(Alz_data)
# boxplots
ggplot(Alz_data, aes(x = Group, y = Age)) +
geom_boxplot()
# loading data
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
# convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
# convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
# remove rows with Group = “Converted” and missing values
Alz_data <- Alz_data %>%
filter(!is.na(Group) & Group != "Converted")
##### task1
summary(Alz_data)
# boxplots
ggplot(Alz_data, aes(x = Group, y = Age)) +
geom_boxplot()
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar()   # 使用geom_bar()绘制计数直方图
# scatterplots
ggplot(Alz_data, aes(x = nWBV, y = Age, color = Group)) +
geom_point()
##### task2
distance.Euclidean <- get_dist(Alz_data)
str(Alz_data) #check value
Alz_data$Group <- ifelse(Alz_data$Group == "Nondemented", 1, 0)
Alz_data$Age <- as.numeric(Alz_data$Age)
Alz_data$EDUC <- as.numeric(Alz_data$EDUC)
Alz_data$SES <- as.numeric(Alz_data$SES)
Alz_data$MMSE <- as.numeric(Alz_data$MMSE)
Alz_data$eTIV <- as.numeric(Alz_data$eTIV)
str(Alz_data)
data1 <- scale(Alz_data)
# loading data
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
# convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
View(Alz_data)
# remove rows with Group = “Converted” and missing values
Alz_data <- Alz_data %>%
filter(!is.na(Group) & Group != "Converted")
##### task1
summary(Alz_data)
# boxplots
ggplot(Alz_data, aes(x = Group, y = Age)) +
geom_boxplot()
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar()   # 使用geom_bar()绘制计数直方图
# scatterplots
ggplot(Alz_data, aes(x = nWBV, y = Age, color = Group)) +
geom_point()
str(Alz_data) #check value
Alz_data$Group <- ifelse(Alz_data$Group == "Nondemented", 1, 0)
Alz_data$Age <- as.numeric(Alz_data$Age)
Alz_data$EDUC <- as.numeric(Alz_data$EDUC)
Alz_data$SES <- as.numeric(Alz_data$SES)
Alz_data$MMSE <- as.numeric(Alz_data$MMSE)
Alz_data$eTIV <- as.numeric(Alz_data$eTIV)
str(Alz_data)
data1 <- scale(Alz_data)
View(data1)
SES <- na.omit(SES)
Alz_data$SES <- na.omit(Alz_data$SES)
str(Alz_data)
# loading data
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
# convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
# remove rows with Group = “Converted” and missing values
Alz_data <- Alz_data %>%
filter(!is.na(Group) & Group != "Converted")
##### task1
summary(Alz_data)
# boxplots
ggplot(Alz_data, aes(x = Group, y = Age)) +
geom_boxplot()
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar()   # 使用geom_bar()绘制计数直方图
# scatterplots
ggplot(Alz_data, aes(x = nWBV, y = Age, color = Group)) +
geom_point()
str(Alz_data) #check value
Alz_data$Group <- ifelse(Alz_data$Group == "Nondemented", 1, 0)
Alz_data$Age <- as.numeric(Alz_data$Age)
Alz_data$EDUC <- as.numeric(Alz_data$EDUC)
Alz_data$SES <- as.numeric(Alz_data$SES)
Alz_data$MMSE <- as.numeric(Alz_data$MMSE)
Alz_data$eTIV <- as.numeric(Alz_data$eTIV)
Alz_data$SES <- na.omit(Alz_data$SES)
str(Alz_data)
data1 <- na.omit(Alz_data)
head(data1)
View(data1)
# loading data
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
# convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
# remove rows with Group = “Converted” and missing values
Alz_data <- Alz_data %>%
filter(!is.na(Group) & Group != "Converted")
##### task1
summary(Alz_data)
# boxplots
ggplot(Alz_data, aes(x = Group, y = Age)) +
geom_boxplot()
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar()   # 使用geom_bar()绘制计数直方图
# scatterplots
ggplot(Alz_data, aes(x = nWBV, y = Age, color = Group)) +
geom_point()
str(Alz_data) #check value
Alz_data$Group <- ifelse(Alz_data$Group == "Nondemented", 1, 0)
Alz_data$Age <- as.numeric(Alz_data$Age)
Alz_data$EDUC <- as.numeric(Alz_data$EDUC)
Alz_data$SES <- as.numeric(Alz_data$SES)
Alz_data$MMSE <- as.numeric(Alz_data$MMSE)
Alz_data$eTIV <- as.numeric(Alz_data$eTIV)
str(Alz_data)
Alz_data2 <- na.omit(Alz_data) #clean NA in dataset
head(Alz_data2)
data1 <- scale(Alz_data2)
set.seed(123)
kmeans2 <- kmeans(data1, centers = 2, nstart = 20)
kmeans3 <- kmeans(data1, centers = 3, nstart = 20)
kmeans4 <- kmeans(data1, centers = 4, nstart = 20)
kmeans2
fviz_cluster(kmeans2, data = data1)
library(tidyr)
fviz_cluster(kmeans2, data = data1)
View(kmeans2)
View(kmeans3)
View(Alz_data2)
View(data1)
kmeans2
str(kmeans2)
fviz_cluster(kmeans2, data = data1)
install.packages("tidyr")
library(tidyr)
gc()
fviz_cluster(kmeans2, data = data1)
library(factoextra)
library(ggplot2)
library(dplyr)
library(tidyr)
library(caret)
gc()
library(ggplot2)
library(dplyr)
library(tidyr)
library(caret)
library(cluster)
library(FSelector)
library(factoextra)
library(glmnet)
library(ggplot2)
library(dplyr)
library(tidyr)
library(cluster)
library(factoextra)
# loading data
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
# convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
# remove rows with Group = “Converted” and missing values
Alz_data <- Alz_data %>%
filter(!is.na(Group) & Group != "Converted")
##### task1
summary(Alz_data)
# boxplots
ggplot(Alz_data, aes(x = Group, y = Age)) +
geom_boxplot()
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar()   # 使用geom_bar()绘制计数直方图
# scatterplots
ggplot(Alz_data, aes(x = nWBV, y = Age, color = Group)) +
geom_point()
##### task2
# check value
str(Alz_data)
# turn value into numerical
Alz_data$Group <- ifelse(Alz_data$Group == "Nondemented", 1, 0)
Alz_data$Age <- as.numeric(Alz_data$Age)
Alz_data$EDUC <- as.numeric(Alz_data$EDUC)
Alz_data$SES <- as.numeric(Alz_data$SES)
Alz_data$MMSE <- as.numeric(Alz_data$MMSE)
Alz_data$eTIV <- as.numeric(Alz_data$eTIV)
str(Alz_data)
Alz_data2 <- na.omit(Alz_data) #clean NA in dataset
head(Alz_data2)
data1 <- scale(Alz_data2)
set.seed(123)
kmeans2 <- kmeans(data1, centers = 2, nstart = 20)
kmeans3 <- kmeans(data1, centers = 3, nstart = 20)
kmeans4 <- kmeans(data1, centers = 4, nstart = 20)
kmeans2
str(kmeans2)
fviz_cluster(kmeans2, data = data1)
install.packages("devtools")
library(ggplot2)
library(dplyr)
library(tidyr)
library(cluster)
library(factoextra)
# loading data
Alz_data<-read.csv("/Users/User/Documents/Essex/curriculum/SpringMA335Modelling experimental/final_project/project data.csv")
# convert M/F into numeric values
Alz_data$M.F <- ifelse(Alz_data$M.F == "M", 1, 0)
# remove rows with Group = “Converted” and missing values
Alz_data <- Alz_data %>%
filter(!is.na(Group) & Group != "Converted")
##### task1
summary(Alz_data)
# boxplots
ggplot(Alz_data, aes(x = Group, y = Age)) +
geom_boxplot()
# histograms
ggplot(Alz_data, aes(x = Group, fill = Group)) +
geom_bar()   # 使用geom_bar()绘制计数直方图
# scatterplots
ggplot(Alz_data, aes(x = nWBV, y = Age, color = Group)) +
geom_point()
##### task2
# check value
str(Alz_data)
# turn value into numerical
Alz_data$Group <- ifelse(Alz_data$Group == "Nondemented", 1, 0)
Alz_data$Age <- as.numeric(Alz_data$Age)
Alz_data$EDUC <- as.numeric(Alz_data$EDUC)
Alz_data$SES <- as.numeric(Alz_data$SES)
Alz_data$MMSE <- as.numeric(Alz_data$MMSE)
Alz_data$eTIV <- as.numeric(Alz_data$eTIV)
str(Alz_data)
Alz_data2 <- na.omit(Alz_data) #clean NA in dataset
head(Alz_data2)
data1 <- scale(Alz_data2)
set.seed(123)
kmeans2 <- kmeans(data1, centers = 2, nstart = 20)
kmeans3 <- kmeans(data1, centers = 3, nstart = 20)
kmeans4 <- kmeans(data1, centers = 4, nstart = 20)
kmeans2
str(kmeans2)
fviz_cluster(kmeans2, data = data1)
fviz_cluster(kmeans2, data = data1)
fviz_cluster(kmeans2, data = data1)
d
